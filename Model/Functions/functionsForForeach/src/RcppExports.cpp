// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// update_v_poisgamma_cpp
arma::mat update_v_poisgamma_cpp(arma::mat v, arma::mat logz, arma::vec lambda, arma::mat X_z, arma::mat beta_theta, arma::mat u, arma::mat beta_z, arma::vec beta0, arma::vec r_nb, arma::vec mu, arma::cube lambda_ijk, arma::cube c_imk, arma::mat delta, arma::mat gamma, arma::vec sigma, double sigma_gamma, arma::vec M_site, arma::mat X_w, arma::mat beta_w, arma::vec K, arma::vec emptySites);
RcppExport SEXP _functionsForForeach_update_v_poisgamma_cpp(SEXP vSEXP, SEXP logzSEXP, SEXP lambdaSEXP, SEXP X_zSEXP, SEXP beta_thetaSEXP, SEXP uSEXP, SEXP beta_zSEXP, SEXP beta0SEXP, SEXP r_nbSEXP, SEXP muSEXP, SEXP lambda_ijkSEXP, SEXP c_imkSEXP, SEXP deltaSEXP, SEXP gammaSEXP, SEXP sigmaSEXP, SEXP sigma_gammaSEXP, SEXP M_siteSEXP, SEXP X_wSEXP, SEXP beta_wSEXP, SEXP KSEXP, SEXP emptySitesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type v(vSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type logz(logzSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_z(X_zSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta_theta(beta_thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type u(uSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta_z(beta_zSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta0(beta0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type r_nb(r_nbSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type lambda_ijk(lambda_ijkSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type c_imk(c_imkSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_gamma(sigma_gammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type M_site(M_siteSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_w(X_wSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta_w(beta_wSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type emptySites(emptySitesSEXP);
    rcpp_result_gen = Rcpp::wrap(update_v_poisgamma_cpp(v, logz, lambda, X_z, beta_theta, u, beta_z, beta0, r_nb, mu, lambda_ijk, c_imk, delta, gamma, sigma, sigma_gamma, M_site, X_w, beta_w, K, emptySites));
    return rcpp_result_gen;
END_RCPP
}
// update_delta_c_d_rjmcmc
List update_delta_c_d_rjmcmc(arma::cube y, arma::mat v, arma::vec lambda, arma::vec r_nb, arma::vec M_site, arma::vec K, arma::vec lambdatilde, double mu0, double n0, double pi0, arma::mat u, arma::mat logz, arma::mat X_w, arma::mat beta_w, arma::vec sigma, arma::vec mu, double sigma_gamma, double v_sd, arma::vec p11, arma::vec p10, arma::mat theta11, arma::vec theta10, arma::vec emptySites);
RcppExport SEXP _functionsForForeach_update_delta_c_d_rjmcmc(SEXP ySEXP, SEXP vSEXP, SEXP lambdaSEXP, SEXP r_nbSEXP, SEXP M_siteSEXP, SEXP KSEXP, SEXP lambdatildeSEXP, SEXP mu0SEXP, SEXP n0SEXP, SEXP pi0SEXP, SEXP uSEXP, SEXP logzSEXP, SEXP X_wSEXP, SEXP beta_wSEXP, SEXP sigmaSEXP, SEXP muSEXP, SEXP sigma_gammaSEXP, SEXP v_sdSEXP, SEXP p11SEXP, SEXP p10SEXP, SEXP theta11SEXP, SEXP theta10SEXP, SEXP emptySitesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type v(vSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type r_nb(r_nbSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type M_site(M_siteSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lambdatilde(lambdatildeSEXP);
    Rcpp::traits::input_parameter< double >::type mu0(mu0SEXP);
    Rcpp::traits::input_parameter< double >::type n0(n0SEXP);
    Rcpp::traits::input_parameter< double >::type pi0(pi0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type u(uSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type logz(logzSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_w(X_wSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta_w(beta_wSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_gamma(sigma_gammaSEXP);
    Rcpp::traits::input_parameter< double >::type v_sd(v_sdSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type p11(p11SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type p10(p10SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta11(theta11SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta10(theta10SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type emptySites(emptySitesSEXP);
    rcpp_result_gen = Rcpp::wrap(update_delta_c_d_rjmcmc(y, v, lambda, r_nb, M_site, K, lambdatilde, mu0, n0, pi0, u, logz, X_w, beta_w, sigma, mu, sigma_gamma, v_sd, p11, p10, theta11, theta10, emptySites));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_functionsForForeach_update_v_poisgamma_cpp", (DL_FUNC) &_functionsForForeach_update_v_poisgamma_cpp, 21},
    {"_functionsForForeach_update_delta_c_d_rjmcmc", (DL_FUNC) &_functionsForForeach_update_delta_c_d_rjmcmc, 23},
    {NULL, NULL, 0}
};

RcppExport void R_init_functionsForForeach(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
